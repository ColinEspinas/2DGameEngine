import Transform from './Transform';
import Component from './Component';
import Engine from './Engine';
export default class Entity {
    protected _id: number;
    protected _name: string;
    protected _properties: Object;
    protected _scene: any;
    shape: any;
    transform: Transform;
    texture: any;
    protected components: any[];
    protected _tags: string[];
    constructor(name: string, properties?: Object);
    get id(): number;
    set name(name: string);
    get name(): string;
    get engine(): Engine;
    get properties(): Object;
    get scene(): any;
    set scene(scene: any);
    create(): void;
    init(): void;
    update(): void;
    fixedUpdate(): void;
    unload(): void;
    initComponents(): void;
    updateComponents(): void;
    fixedUpdateComponents(): void;
    unloadComponents(): void;
    addComponent<ComponentType extends Component>(c: ComponentType): ComponentType;
    getComponent(name: string): any;
    removeComponent(name: string): void;
    hasTag(tag: string): boolean;
    getTagIndex(tag: string): number;
    addTag(tag: string): void;
    removeTag(tag: string): void;
}
