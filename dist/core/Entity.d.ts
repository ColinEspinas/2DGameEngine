import Transform from './Transform';
import Component from './Component';
import BaseScene from '../scenes/BaseScene';
import Engine from './Engine';
export default class Entity {
    protected _id: number;
    protected _name: string;
    protected _properties: Object;
    protected _scene: BaseScene;
    shape: any;
    transform: Transform;
    texture: any;
    protected components: any[];
    constructor(name: string, properties?: Object);
    get id(): number;
    set name(name: string);
    get name(): string;
    get engine(): Engine;
    get properties(): Object;
    get scene(): BaseScene;
    set scene(scene: BaseScene);
    Create(): void;
    Init(): void;
    Update(): void;
    FixedUpdate(): void;
    Unload(): void;
    InitComponents(): void;
    UpdateComponents(): void;
    FixedUpdateComponents(): void;
    UnloadComponents(): void;
    AddComponent<ComponentType extends Component>(c: ComponentType): ComponentType;
    GetComponent(name: string): any;
    RemoveComponent(name: string): void;
}
